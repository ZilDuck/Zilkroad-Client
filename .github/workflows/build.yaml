name: Build

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: zilkroad
  CONTAINER_NAME: client

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get previous tag
        id: previousTag
        uses: WyriHaximus/github-action-get-previous-tag@v1.2.1
        with:
          fallback: 0.0.0
      - name: Get next semantic version
        id: semVars
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.previousTag.outputs.tag }}

      - name: Set commit tag
        id: commitTag
        run: |
          [[ "${{ github.event_name }}" = "pull_request" ]] && echo "::set-output name=tag::${{ steps.semVars.outputs.patch }}-$(git rev-parse --short HEAD)" || true
          [[ "${{ github.event_name }}" = "push" ]] && echo "::set-output name=tag::${{ steps.semVars.outputs.patch }}" || true
          
      - name: Beta Build, tag, and push image to Amazon ECR
        id: build-image-beta
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ENVIRONMENT: beta
        run: |
          export IMAGE_TAG=$ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME-beta:${{ steps.commitTag.outputs.tag }}
          docker build \
          --build-arg API_ENDPOINT="https://staging-public-api.zilkroad.io" \
          --build-arg BLOCK_NETWORK="testnet" \
          --build-arg MARKETPLACE_ADDRESS="0xad43392d1750771e58931801ddc274e5984660b4" \
          --build-arg WZIL_ADDRESS="0x864895d52504c388A345eF6cd9C800DBBD0eF92A" \
          --build-arg TAX_AMOUNT="200" \
          --build-arg MAX_ROYALTY_BPS="10000" \
          --build-arg CDN_BASE_URL="https://zildexr-testnet.b-cdn.net/" \
          --build-arg DOCS_URL="https://docs-testnet.zilkroad.io/" \
          -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "::set-output name=image::$IMAGE_TAG"
          
      - name: Testnet Build, tag, and push image to Amazon ECR
        id: build-image-testnet
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ENVIRONMENT: testnet
        run: |
          export IMAGE_TAG=$ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME-testnet:${{ steps.commitTag.outputs.tag }}
          docker build \
          --build-arg API_ENDPOINT="https://testnet-public-api.zilkroad.io" \
          --build-arg BLOCK_NETWORK="testnet" \
          --build-arg MARKETPLACE_ADDRESS="0xad43392d1750771e58931801ddc274e5984660b4" \
          --build-arg WZIL_ADDRESS="0x864895d52504c388A345eF6cd9C800DBBD0eF92A" \
          --build-arg TAX_AMOUNT="200" \
          --build-arg MAX_ROYALTY_BPS="10000" \
          --build-arg CDN_BASE_URL="https://zildexr-testnet.b-cdn.net/" \
          --build-arg DOCS_URL="https://docs-testnet.zilkroad.io/" \
          -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "::set-output name=image::$IMAGE_TAG"
          
      - name: Mainnet Build, tag, and push image to Amazon ECR
        id: build-image-mainnet
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ENVIRONMENT: mainnet
        run: |
          export IMAGE_TAG=$ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME-mainnet:${{ steps.commitTag.outputs.tag }}
          docker build \
          --build-arg API_ENDPOINT="https://mainnet-public-api.zilkroad.io" \
          --build-arg BLOCK_NETWORK="mainnet" \
          --build-arg MARKETPLACE_ADDRESS="0x70b1f9e6a4d00baaf6972957f3b6a9f6c9f631b6" \
          --build-arg WZIL_ADDRESS="0x4306f921c982766810cf342775fd79aa2d0d0e24" \
          --build-arg TAX_AMOUNT="200" \
          --build-arg MAX_ROYALTY_BPS="10000" \
          --build-arg CDN_BASE_URL="https://cdn.zildexr.com/" \
          --build-arg DOCS_URL="https://docs-testnet.zilkroad.io/" \
          -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "::set-output name=image::$IMAGE_TAG"
          
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.commitTag.outputs.tag }}',
              sha: context.sha
            })

      - name: Deploy testnet
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yaml/dispatches \
            -d '{"ref":"refs/tags/${{ steps.commitTag.outputs.tag }}", "inputs":{"environment":"testnet", "tag":"${{ steps.commitTag.outputs.tag }}"}}'