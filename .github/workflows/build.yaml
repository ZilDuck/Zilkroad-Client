name: Build

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: zilkroad-private
  CONTAINER_NAME: client

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get previous tag
      id: previousTag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      with:
        fallback: 0.0.0

    - name: Get next semantic version
      id: semVars
      uses: WyriHaximus/github-action-next-semvers@v1
      with:
        version: ${{ steps.previousTag.outputs.tag }}

    - name: Set commit tag
      id: commitTag
      run: |
        [[ "${{ github.event_name }}" = "pull_request" ]] && echo "::set-output name=tag::${{ steps.semVars.outputs.patch }}-$(git rev-parse --short HEAD)" || true
        [[ "${{ github.event_name }}" = "push" ]] && echo "::set-output name=tag::${{ steps.semVars.outputs.patch }}" || true
          
    - name: Build, tag, and push image to Amazon ECR
      working-directory: ./client
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME:${{ steps.commitTag.outputs.tag }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME:${{ steps.commitTag.outputs.tag }}
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY/$CONTAINER_NAME:${{ steps.commitTag.outputs.tag }}"

    - name: Create a GitHub release
      if: github.event_name == 'push'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.semVars.outputs.patch }}
        name: Release ${{ steps.semVars.outputs.v_patch }}
        token: ${{ secrets.ACCESS_TOKEN }}
